"""5. Основы Python. Часть 3


1. Продолжаем работать с формулами.
Используя модуль math, вычислите значения по следующим
формулам:
a)"""


import math

n_start = 0
n_end = 16

x = 10

value = 0.0

sin_x = math.sin(x)

for n in range(n_start, n_end):
    value += math.pow(-1, n) * ((math.pow(x, 2*n + 1)) / (math.factorial(2*n + 1)))


print(f"sin(x) = {sin_x}")
print(f"Sum: {value}")
print(f"Diff: {value - sin_x}")

print()


'''
b)
'''


import math

n_start = 0
n_end = 16

x = 10

value = 0.0

cos_x = math.cos(x)

for n in range(n_start, n_end):
    value += math.pow(-1, n) * ((math.pow(x, 2*n)) / (math.factorial(2*n)))


print(f"cos(x) = {cos_x}")
print(f"Sum: {value}")
print(f"Diff: {value - cos_x}")


"""2. Маша хочет накопить на телефон, который стоит N денег.
Маша может откладывать k рублей каждый день, кроме
воскресенья (в воскресенье она тратит эти деньги на поход в
кино). Маша начинает копить в понедельник. За сколько дней
она накопит нужную сумму?"""

n = int(input('Введите сколько стоит телефон: '))

k = int(input('Введите сумму, которую Маша может откладывать каждый день: '))

days = 0

money = 0

while money < n:
    days += 1
    if days % 7 != 0:
        money += k

print(f'Маша накопит нужную сумму за {days} дней')


'''3. Реализовать вывод последовательности чисел Фибоначчи
(1 1 2 3 5 8 13 21 34 55 89 ...), где каждое следующее число
является суммой двух предыдущих.'''


n = int(input('Введите длинну ряда Фибоначчи: '))
a = 1
b = 1

for _ in range(n):
    print(a, end=' ')
    a, b = b, a + b


'''4. Дан список чисел. Реализовать программу, которая
посчитает сумму всех чисел в списке, а также найдет
минимальный и максимальный элементы.'''


numbers = list(input('Введите список чисел через пробел').split())

total = 0

for num in numbers:
    total += int(num)
numbers.sort()

print(numbers)
print(f'Минимальное число = {numbers[0]}')
print(f'Максимальное число = {numbers[-1]}')
print(f"Сумма чисел в списке: = {total}")


'''5. Дан список чисел. Реализовать программу, которая
проверит, все ли числа в списке уникальны (встречаются
только один раз). Программа должна вывести результат
проверки, и, если не все элементы уникальны, вывести
дублирующиеся элементы и количество их повторений в
списке'''


list_1 = list(input('Введите список чисел через пробел ').split())
print(list_1)

set_list = set(list_1)

for item in set_list:
    count = list_1.count(item)
    if count > 1:
        print(f"Элемент {item} встречается {count} раз")


'''6. Дан список чисел, отсортированных по возрастанию. На
вход принимается значение, равное одному из элементов
списка. Реализовать алгоритм бинарного поиска, на выходе
программа должна вывести позицию искомого элемента в
исходном списке.'''


list_1 = list(input('Введите список чисел через пробел ').split())
n = input('Введите искомый элемент из списка ')
start = 0
end = len(list_1) - 1
while start <= end:
    mid = (start + end) // 2
    if list_1[mid] == n:
        print(f'Позиция искомого элемента в исходном списке равна {mid}')
    if list_1[mid] > n:
        end = mid - 1
    else:
        start = mid + 1


'''
7*. Реализовать алгоритм бинарного поиска по сдвинутому
списку отсортированных чисел (например, дан список [5, 6, 7,
1, 2, 3, 4])
'''


list_1 = [5, 6, 7, 1, 2, 3, 4]
n = 7
start = 0
end = len(list_1) - 1
while start <= end:
    mid = (start + end) // 2
    if list_1[mid] == n:
        print(f'Позиция искомого элемента в исходном списке равна {mid}')
    if list_1[mid] > n:
        end = mid - 1
    else:
        if n <= list_1[end]:
            start = mid + 1
        else:
            end = mid - 1
